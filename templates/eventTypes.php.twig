{#
    This file is part of the CloudStack Client Generator.

    (c) Quentin Pleplé <quentin.pleple@gmail.com>
    (c) Aaron Hurt <ahurt@anbcs.com>
    (c) Nathan Johnson <nathan@nathanjohnson.info>
    (c) Daniel Carbone <daniel.p.carbone@gmail.com>
    (c) Bogdan Gabor <bgabor@ena.com>

    For the full copyright and license information, please view the LICENSE
    file that was distributed with this source code.
#}
<?php{{ namespace_stmt() }}

/*
 * This file was autogenerated as part of the CloudStack PHP Client.
 *
 * Date Generated: {{ now('Y-m-d') }}
 * API Version: {{ capabilities.capability.cloudstackversion }}
 *
 * (c) Quentin Pleplé {{ '<quentin.pleple@gmail.com>'|raw }}
 * (c) Aaron Hurt {{ '<ahurt@anbcs.com>'|raw }}
 * (c) Nathan Johnson {{ '<nathan@nathanjohnson.org>'|raw }}
 * (c) Daniel Carbone {{ '<daniel.p.carbone@gmail.com>'|raw }}
 * (c) Bogdan Gabor {{ '<bgabor@ena.com>'|raw }}
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * Pulled from https://github.com/apache/cloudstack/blob/4.8/api/src/com/cloud/event/EventTypes.java
 */
abstract class CloudStackEventTypes {
    // VM Events
    const EVENT_VM_CREATE = 'VM.CREATE';
    const EVENT_VM_DESTROY = 'VM.DESTROY';
    const EVENT_VM_START = 'VM.START';
    const EVENT_VM_STOP = 'VM.STOP';
    const EVENT_VM_REBOOT = 'VM.REBOOT';
    const EVENT_VM_UPDATE = 'VM.UPDATE';
    const EVENT_VM_UPGRADE = 'VM.UPGRADE';
    const EVENT_VM_DYNAMIC_SCALE = 'VM.DYNAMIC.SCALE';
    const EVENT_VM_RESETPASSWORD = 'VM.RESETPASSWORD';
    const EVENT_VM_RESETSSHKEY = 'VM.RESETSSHKEY';
    const EVENT_VM_MIGRATE = 'VM.MIGRATE';
    const EVENT_VM_MOVE = 'VM.MOVE';
    const EVENT_VM_RESTORE = 'VM.RESTORE';
    const EVENT_VM_EXPUNGE = 'VM.EXPUNGE';

    // Domain Router
    const EVENT_ROUTER_CREATE = 'ROUTER.CREATE';
    const EVENT_ROUTER_DESTROY = 'ROUTER.DESTROY';
    const EVENT_ROUTER_START = 'ROUTER.START';
    const EVENT_ROUTER_STOP = 'ROUTER.STOP';
    const EVENT_ROUTER_REBOOT = 'ROUTER.REBOOT';
    const EVENT_ROUTER_HA = 'ROUTER.HA';
    const EVENT_ROUTER_UPGRADE = 'ROUTER.UPGRADE';

    // Console proxy
    const EVENT_PROXY_CREATE = 'PROXY.CREATE';
    const EVENT_PROXY_DESTROY = 'PROXY.DESTROY';
    const EVENT_PROXY_START = 'PROXY.START';
    const EVENT_PROXY_STOP = 'PROXY.STOP';
    const EVENT_PROXY_REBOOT = 'PROXY.REBOOT';
    const EVENT_PROXY_HA = 'PROXY.HA';

    // VNC Console Events
    const EVENT_VNC_CONNECT = 'VNC.CONNECT';
    const EVENT_VNC_DISCONNECT = 'VNC.DISCONNECT';

    // Network Events
    const EVENT_NET_IP_ASSIGN = 'NET.IPASSIGN';
    const EVENT_NET_IP_RELEASE = 'NET.IPRELEASE';
    const EVENT_NET_IP_UPDATE = 'NET.IPUPDATE';
    const EVENT_PORTABLE_IP_ASSIGN = 'PORTABLE.IPASSIGN';
    const EVENT_PORTABLE_IP_RELEASE = 'PORTABLE.IPRELEASE';
    const EVENT_NET_RULE_ADD = 'NET.RULEADD';
    const EVENT_NET_RULE_DELETE = 'NET.RULEDELETE';
    const EVENT_NET_RULE_MODIFY = 'NET.RULEMODIFY';
    const EVENT_NETWORK_CREATE = 'NETWORK.CREATE';
    const EVENT_NETWORK_DELETE = 'NETWORK.DELETE';
    const EVENT_NETWORK_UPDATE = 'NETWORK.UPDATE';
    const EVENT_FIREWALL_OPEN = 'FIREWALL.OPEN';
    const EVENT_FIREWALL_CLOSE = 'FIREWALL.CLOSE';
    const EVENT_FIREWALL_UPDATE = 'FIREWALL.UPDATE';

    const EVENT_FIREWALL_EGRESS_OPEN = 'FIREWALL.EGRESS.OPEN';
    const EVENT_FIREWALL_EGRESS_CLOSE = 'FIREWALL.EGRESS.CLOSE';
    const EVENT_FIREWALL_EGRESS_UPDATE = 'FIREWALL.EGRESS.UPDATE';

    //NIC Events
    const EVENT_NIC_CREATE = 'NIC.CREATE';
    const EVENT_NIC_DELETE = 'NIC.DELETE';
    const EVENT_NIC_UPDATE = 'NIC.UPDATE';
    const EVENT_NIC_DETAIL_ADD = 'NIC.DETAIL.ADD';
    const EVENT_NIC_DETAIL_UPDATE = 'NIC.DETAIL.UPDATE';
    const EVENT_NIC_DETAIL_REMOVE = 'NIC.DETAIL.REMOVE';

    // Load Balancers
    const EVENT_ASSIGN_TO_LOAD_BALANCER_RULE = 'LB.ASSIGN.TO.RULE';
    const EVENT_REMOVE_FROM_LOAD_BALANCER_RULE = 'LB.REMOVE.FROM.RULE';
    const EVENT_LOAD_BALANCER_CREATE = 'LB.CREATE';
    const EVENT_LOAD_BALANCER_DELETE = 'LB.DELETE';
    const EVENT_LB_STICKINESSPOLICY_CREATE = 'LB.STICKINESSPOLICY.CREATE';
    const EVENT_LB_STICKINESSPOLICY_UPDATE = 'LB.STICKINESSPOLICY.UPDATE';
    const EVENT_LB_STICKINESSPOLICY_DELETE = 'LB.STICKINESSPOLICY.DELETE';
    const EVENT_LB_HEALTHCHECKPOLICY_CREATE = 'LB.HEALTHCHECKPOLICY.CREATE';
    const EVENT_LB_HEALTHCHECKPOLICY_DELETE = 'LB.HEALTHCHECKPOLICY.DELETE';
    const EVENT_LB_HEALTHCHECKPOLICY_UPDATE = 'LB.HEALTHCHECKPOLICY.UPDATE';
    const EVENT_LOAD_BALANCER_UPDATE = 'LB.UPDATE';
    const EVENT_LB_CERT_UPLOAD = 'LB.CERT.UPLOAD';
    const EVENT_LB_CERT_DELETE = 'LB.CERT.DELETE';
    const EVENT_LB_CERT_ASSIGN = 'LB.CERT.ASSIGN';
    const EVENT_LB_CERT_REMOVE = 'LB.CERT.REMOVE';

    // Global Load Balancer rules
    const EVENT_ASSIGN_TO_GLOBAL_LOAD_BALANCER_RULE = 'GLOBAL.LB.ASSIGN';
    const EVENT_REMOVE_FROM_GLOBAL_LOAD_BALANCER_RULE = 'GLOBAL.LB.REMOVE';
    const EVENT_GLOBAL_LOAD_BALANCER_CREATE = 'GLOBAL.LB.CREATE';
    const EVENT_GLOBAL_LOAD_BALANCER_DELETE = 'GLOBAL.LB.DELETE';
    const EVENT_GLOBAL_LOAD_BALANCER_UPDATE = 'GLOBAL.LB.UPDATE';

    // Role events
    const EVENT_ROLE_CREATE = 'ROLE.CREATE';
    const EVENT_ROLE_UPDATE = 'ROLE.UPDATE';
    const EVENT_ROLE_DELETE = 'ROLE.DELETE';
    const EVENT_ROLE_PERMISSION_CREATE = 'ROLE.PERMISSION.CREATE';
    const EVENT_ROLE_PERMISSION_UPDATE = 'ROLE.PERMISSION.UPDATE';
    const EVENT_ROLE_PERMISSION_DELETE = 'ROLE.PERMISSION.DELETE';

    // Account events
    const EVENT_ACCOUNT_ENABLE = 'ACCOUNT.ENABLE';
    const EVENT_ACCOUNT_DISABLE = 'ACCOUNT.DISABLE';
    const EVENT_ACCOUNT_CREATE = 'ACCOUNT.CREATE';
    const EVENT_ACCOUNT_DELETE = 'ACCOUNT.DELETE';
    const EVENT_ACCOUNT_UPDATE = 'ACCOUNT.UPDATE';
    const EVENT_ACCOUNT_MARK_DEFAULT_ZONE = 'ACCOUNT.MARK.DEFAULT.ZONE';

    // UserVO Events
    const EVENT_USER_LOGIN = 'USER.LOGIN';
    const EVENT_USER_LOGOUT = 'USER.LOGOUT';
    const EVENT_USER_CREATE = 'USER.CREATE';
    const EVENT_USER_DELETE = 'USER.DELETE';
    const EVENT_USER_DISABLE = 'USER.DISABLE';
    const EVENT_USER_UPDATE = 'USER.UPDATE';
    const EVENT_USER_ENABLE = 'USER.ENABLE';
    const EVENT_USER_LOCK = 'USER.LOCK';

    //registering SSH keypair events
    const EVENT_REGISTER_SSH_KEYPAIR = 'REGISTER.SSH.KEYPAIR';

    //register for user API and secret keys
    const EVENT_REGISTER_FOR_SECRET_API_KEY = 'REGISTER.USER.KEY';

    // Template Events
    const EVENT_TEMPLATE_CREATE = 'TEMPLATE.CREATE';
    const EVENT_TEMPLATE_DELETE = 'TEMPLATE.DELETE';
    const EVENT_TEMPLATE_UPDATE = 'TEMPLATE.UPDATE';
    const EVENT_TEMPLATE_DOWNLOAD_START = 'TEMPLATE.DOWNLOAD.START';
    const EVENT_TEMPLATE_DOWNLOAD_SUCCESS = 'TEMPLATE.DOWNLOAD.SUCCESS';
    const EVENT_TEMPLATE_DOWNLOAD_FAILED = 'TEMPLATE.DOWNLOAD.FAILED';
    const EVENT_TEMPLATE_COPY = 'TEMPLATE.COPY';
    const EVENT_TEMPLATE_EXTRACT = 'TEMPLATE.EXTRACT';
    const EVENT_TEMPLATE_UPLOAD = 'TEMPLATE.UPLOAD';
    const EVENT_TEMPLATE_CLEANUP = 'TEMPLATE.CLEANUP';

    // Volume Events
    const EVENT_VOLUME_CREATE = 'VOLUME.CREATE';
    const EVENT_VOLUME_DELETE = 'VOLUME.DELETE';
    const EVENT_VOLUME_ATTACH = 'VOLUME.ATTACH';
    const EVENT_VOLUME_DETACH = 'VOLUME.DETACH';
    const EVENT_VOLUME_EXTRACT = 'VOLUME.EXTRACT';
    const EVENT_VOLUME_UPLOAD = 'VOLUME.UPLOAD';
    const EVENT_VOLUME_MIGRATE = 'VOLUME.MIGRATE';
    const EVENT_VOLUME_RESIZE = 'VOLUME.RESIZE';
    const EVENT_VOLUME_DETAIL_UPDATE = 'VOLUME.DETAIL.UPDATE';
    const EVENT_VOLUME_DETAIL_ADD = 'VOLUME.DETAIL.ADD';
    const EVENT_VOLUME_DETAIL_REMOVE = 'VOLUME.DETAIL.REMOVE';
    const EVENT_VOLUME_UPDATE = 'VOLUME.UPDATE';

    // Domains
    const EVENT_DOMAIN_CREATE = 'DOMAIN.CREATE';
    const EVENT_DOMAIN_DELETE = 'DOMAIN.DELETE';
    const EVENT_DOMAIN_UPDATE = 'DOMAIN.UPDATE';

    // Snapshots
    const EVENT_SNAPSHOT_CREATE = 'SNAPSHOT.CREATE';
    const EVENT_SNAPSHOT_DELETE = 'SNAPSHOT.DELETE';
    const EVENT_SNAPSHOT_REVERT = 'SNAPSHOT.REVERT';
    const EVENT_SNAPSHOT_POLICY_CREATE = 'SNAPSHOTPOLICY.CREATE';
    const EVENT_SNAPSHOT_POLICY_UPDATE = 'SNAPSHOTPOLICY.UPDATE';
    const EVENT_SNAPSHOT_POLICY_DELETE = 'SNAPSHOTPOLICY.DELETE';

    // ISO
    const EVENT_ISO_CREATE = 'ISO.CREATE';
    const EVENT_ISO_DELETE = 'ISO.DELETE';
    const EVENT_ISO_COPY = 'ISO.COPY';
    const EVENT_ISO_ATTACH = 'ISO.ATTACH';
    const EVENT_ISO_DETACH = 'ISO.DETACH';
    const EVENT_ISO_EXTRACT = 'ISO.EXTRACT';
    const EVENT_ISO_UPLOAD = 'ISO.UPLOAD';

    // SSVM
    const EVENT_SSVM_CREATE = 'SSVM.CREATE';
    const EVENT_SSVM_DESTROY = 'SSVM.DESTROY';
    const EVENT_SSVM_START = 'SSVM.START';
    const EVENT_SSVM_STOP = 'SSVM.STOP';
    const EVENT_SSVM_REBOOT = 'SSVM.REBOOT';
    const EVENT_SSVM_HA = 'SSVM.HA';

    // Service Offerings
    const EVENT_SERVICE_OFFERING_CREATE = 'SERVICE.OFFERING.CREATE';
    const EVENT_SERVICE_OFFERING_EDIT = 'SERVICE.OFFERING.EDIT';
    const EVENT_SERVICE_OFFERING_DELETE = 'SERVICE.OFFERING.DELETE';

    // Disk Offerings
    const EVENT_DISK_OFFERING_CREATE = 'DISK.OFFERING.CREATE';
    const EVENT_DISK_OFFERING_EDIT = 'DISK.OFFERING.EDIT';
    const EVENT_DISK_OFFERING_DELETE = 'DISK.OFFERING.DELETE';

    // Network offerings
    const EVENT_NETWORK_OFFERING_CREATE = 'NETWORK.OFFERING.CREATE';
    const EVENT_NETWORK_OFFERING_ASSIGN = 'NETWORK.OFFERING.ASSIGN';
    const EVENT_NETWORK_OFFERING_EDIT = 'NETWORK.OFFERING.EDIT';
    const EVENT_NETWORK_OFFERING_REMOVE = 'NETWORK.OFFERING.REMOVE';
    const EVENT_NETWORK_OFFERING_DELETE = 'NETWORK.OFFERING.DELETE';

    // Pods
    const EVENT_POD_CREATE = 'POD.CREATE';
    const EVENT_POD_EDIT = 'POD.EDIT';
    const EVENT_POD_DELETE = 'POD.DELETE';

    // Zones
    const EVENT_ZONE_CREATE = 'ZONE.CREATE';
    const EVENT_ZONE_EDIT = 'ZONE.EDIT';
    const EVENT_ZONE_DELETE = 'ZONE.DELETE';

    // VLANs/IP ranges
    const EVENT_VLAN_IP_RANGE_CREATE = 'VLAN.IP.RANGE.CREATE';
    const EVENT_VLAN_IP_RANGE_DELETE = 'VLAN.IP.RANGE.DELETE';
    const EVENT_VLAN_IP_RANGE_DEDICATE = 'VLAN.IP.RANGE.DEDICATE';
    const EVENT_VLAN_IP_RANGE_RELEASE = 'VLAN.IP.RANGE.RELEASE';

    const EVENT_STORAGE_IP_RANGE_CREATE = 'STORAGE.IP.RANGE.CREATE';
    const EVENT_STORAGE_IP_RANGE_DELETE = 'STORAGE.IP.RANGE.DELETE';
    const EVENT_STORAGE_IP_RANGE_UPDATE = 'STORAGE.IP.RANGE.UPDATE';

    // Configuration Table
    const EVENT_CONFIGURATION_VALUE_EDIT = 'CONFIGURATION.VALUE.EDIT';

    // Security Groups
    const EVENT_SECURITY_GROUP_AUTHORIZE_INGRESS = 'SG.AUTH.INGRESS';
    const EVENT_SECURITY_GROUP_REVOKE_INGRESS = 'SG.REVOKE.INGRESS';
    const EVENT_SECURITY_GROUP_AUTHORIZE_EGRESS = 'SG.AUTH.EGRESS';
    const EVENT_SECURITY_GROUP_REVOKE_EGRESS = 'SG.REVOKE.EGRESS';
    const EVENT_SECURITY_GROUP_CREATE = 'SG.CREATE';
    const EVENT_SECURITY_GROUP_DELETE = 'SG.DELETE';
    const EVENT_SECURITY_GROUP_ASSIGN = 'SG.ASSIGN';
    const EVENT_SECURITY_GROUP_REMOVE = 'SG.REMOVE';

    // Host
    const EVENT_HOST_RECONNECT = 'HOST.RECONNECT';

    // Host Out-of-band management
    const EVENT_HOST_OUTOFBAND_MANAGEMENT_ENABLE = 'HOST.OOBM.ENABLE';
    const EVENT_HOST_OUTOFBAND_MANAGEMENT_DISABLE = 'HOST.OOBM.DISABLE';
    const EVENT_HOST_OUTOFBAND_MANAGEMENT_CONFIGURE = 'HOST.OOBM.CONFIGURE';
    const EVENT_HOST_OUTOFBAND_MANAGEMENT_ACTION = 'HOST.OOBM.ACTION';
    const EVENT_HOST_OUTOFBAND_MANAGEMENT_CHANGE_PASSWORD = 'HOST.OOBM.CHANGEPASSWORD';
    const EVENT_HOST_OUTOFBAND_MANAGEMENT_POWERSTATE_TRANSITION = 'HOST.OOBM.POWERSTATE.TRANSITION';

    // Maintenance
    const EVENT_MAINTENANCE_CANCEL = 'MAINT.CANCEL';
    const EVENT_MAINTENANCE_CANCEL_PRIMARY_STORAGE = 'MAINT.CANCEL.PS';
    const EVENT_MAINTENANCE_PREPARE = 'MAINT.PREPARE';
    const EVENT_MAINTENANCE_PREPARE_PRIMARY_STORAGE = 'MAINT.PREPARE.PS';

    // Primary storage pool
    const EVENT_ENABLE_PRIMARY_STORAGE = 'ENABLE.PS';
    const EVENT_DISABLE_PRIMARY_STORAGE = 'DISABLE.PS';

    // VPN
    const EVENT_REMOTE_ACCESS_VPN_CREATE = 'VPN.REMOTE.ACCESS.CREATE';
    const EVENT_REMOTE_ACCESS_VPN_DESTROY = 'VPN.REMOTE.ACCESS.DESTROY';
    const EVENT_REMOTE_ACCESS_VPN_UPDATE = 'VPN.REMOTE.ACCESS.UPDATE';
    const EVENT_VPN_USER_ADD = 'VPN.USER.ADD';
    const EVENT_VPN_USER_REMOVE = 'VPN.USER.REMOVE';
    const EVENT_S2S_VPN_GATEWAY_CREATE = 'VPN.S2S.VPN.GATEWAY.CREATE';
    const EVENT_S2S_VPN_GATEWAY_DELETE = 'VPN.S2S.VPN.GATEWAY.DELETE';
    const EVENT_S2S_VPN_GATEWAY_UPDATE = 'VPN.S2S.VPN.GATEWAY.UPDATE';
    const EVENT_S2S_VPN_CUSTOMER_GATEWAY_CREATE = 'VPN.S2S.CUSTOMER.GATEWAY.CREATE';
    const EVENT_S2S_VPN_CUSTOMER_GATEWAY_DELETE = 'VPN.S2S.CUSTOMER.GATEWAY.DELETE';
    const EVENT_S2S_VPN_CUSTOMER_GATEWAY_UPDATE = 'VPN.S2S.CUSTOMER.GATEWAY.UPDATE';
    const EVENT_S2S_VPN_CONNECTION_CREATE = 'VPN.S2S.CONNECTION.CREATE';
    const EVENT_S2S_VPN_CONNECTION_DELETE = 'VPN.S2S.CONNECTION.DELETE';
    const EVENT_S2S_VPN_CONNECTION_RESET = 'VPN.S2S.CONNECTION.RESET';
    const EVENT_S2S_VPN_CONNECTION_UPDATE = 'VPN.S2S.CONNECTION.UPDATE';

    // Network
    const EVENT_NETWORK_RESTART = 'NETWORK.RESTART';

    // Custom certificates
    const EVENT_UPLOAD_CUSTOM_CERTIFICATE = 'UPLOAD.CUSTOM.CERTIFICATE';

    // OneToOnenat
    const EVENT_ENABLE_STATIC_NAT = 'STATICNAT.ENABLE';
    const EVENT_DISABLE_STATIC_NAT = 'STATICNAT.DISABLE';

    const EVENT_ZONE_VLAN_ASSIGN = 'ZONE.VLAN.ASSIGN';
    const EVENT_ZONE_VLAN_RELEASE = 'ZONE.VLAN.RELEASE';

    // Projects
    const EVENT_PROJECT_CREATE = 'PROJECT.CREATE';
    const EVENT_PROJECT_UPDATE = 'PROJECT.UPDATE';
    const EVENT_PROJECT_DELETE = 'PROJECT.DELETE';
    const EVENT_PROJECT_ACTIVATE = 'PROJECT.ACTIVATE';
    const EVENT_PROJECT_SUSPEND = 'PROJECT.SUSPEND';
    const EVENT_PROJECT_ACCOUNT_ADD = 'PROJECT.ACCOUNT.ADD';
    const EVENT_PROJECT_INVITATION_UPDATE = 'PROJECT.INVITATION.UPDATE';
    const EVENT_PROJECT_INVITATION_REMOVE = 'PROJECT.INVITATION.REMOVE';
    const EVENT_PROJECT_ACCOUNT_REMOVE = 'PROJECT.ACCOUNT.REMOVE';

    // Network as a Service
    const EVENT_NETWORK_ELEMENT_CONFIGURE = 'NETWORK.ELEMENT.CONFIGURE';

    // Physical Network Events
    const EVENT_PHYSICAL_NETWORK_CREATE = 'PHYSICAL.NETWORK.CREATE';
    const EVENT_PHYSICAL_NETWORK_DELETE = 'PHYSICAL.NETWORK.DELETE';
    const EVENT_PHYSICAL_NETWORK_UPDATE = 'PHYSICAL.NETWORK.UPDATE';

    // Physical Network Service Provider Events
    const EVENT_SERVICE_PROVIDER_CREATE = 'SERVICE.PROVIDER.CREATE';
    const EVENT_SERVICE_PROVIDER_DELETE = 'SERVICE.PROVIDER.DELETE';
    const EVENT_SERVICE_PROVIDER_UPDATE = 'SERVICE.PROVIDER.UPDATE';

    // Physical Network TrafficType Events
    const EVENT_TRAFFIC_TYPE_CREATE = 'TRAFFIC.TYPE.CREATE';
    const EVENT_TRAFFIC_TYPE_DELETE = 'TRAFFIC.TYPE.DELETE';
    const EVENT_TRAFFIC_TYPE_UPDATE = 'TRAFFIC.TYPE.UPDATE';

    // external network device events
    const EVENT_EXTERNAL_LB_DEVICE_ADD = 'PHYSICAL.LOADBALANCER.ADD';
    const EVENT_EXTERNAL_LB_DEVICE_DELETE = 'PHYSICAL.LOADBALANCER.DELETE';
    const EVENT_EXTERNAL_LB_DEVICE_CONFIGURE = 'PHYSICAL.LOADBALANCER.CONFIGURE';

    // external switch management device events (E.g.: Cisco Nexus 1000v Virtual Supervisor Module.
    const EVENT_EXTERNAL_SWITCH_MGMT_DEVICE_ADD = 'SWITCH.MGMT.ADD';
    const EVENT_EXTERNAL_SWITCH_MGMT_DEVICE_DELETE = 'SWITCH.MGMT.DELETE';
    const EVENT_EXTERNAL_SWITCH_MGMT_DEVICE_CONFIGURE = 'SWITCH.MGMT.CONFIGURE';
    const EVENT_EXTERNAL_SWITCH_MGMT_DEVICE_ENABLE = 'SWITCH.MGMT.ENABLE';
    const EVENT_EXTERNAL_SWITCH_MGMT_DEVICE_DISABLE = 'SWITCH.MGMT.DISABLE';

    const EVENT_EXTERNAL_FIREWALL_DEVICE_ADD = 'PHYSICAL.FIREWALL.ADD';
    const EVENT_EXTERNAL_FIREWALL_DEVICE_DELETE = 'PHYSICAL.FIREWALL.DELETE';
    const EVENT_EXTERNAL_FIREWALL_DEVICE_CONFIGURE = 'PHYSICAL.FIREWALL.CONFIGURE';

    // VPC
    const EVENT_VPC_CREATE = 'VPC.CREATE';
    const EVENT_VPC_UPDATE = 'VPC.UPDATE';
    const EVENT_VPC_DELETE = 'VPC.DELETE';
    const EVENT_VPC_RESTART = 'VPC.RESTART';

    // Network ACL
    const EVENT_NETWORK_ACL_CREATE = 'NETWORK.ACL.CREATE';
    const EVENT_NETWORK_ACL_DELETE = 'NETWORK.ACL.DELETE';
    const EVENT_NETWORK_ACL_REPLACE = 'NETWORK.ACL.REPLACE';
    const EVENT_NETWORK_ACL_UPDATE = 'NETWORK.ACL.UPDATE';
    const EVENT_NETWORK_ACL_ITEM_CREATE = 'NETWORK.ACL.ITEM.CREATE';
    const EVENT_NETWORK_ACL_ITEM_UPDATE = 'NETWORK.ACL.ITEM.UPDATE';
    const EVENT_NETWORK_ACL_ITEM_DELETE = 'NETWORK.ACL.ITEM.DELETE';

    // VPC offerings
    const EVENT_VPC_OFFERING_CREATE = 'VPC.OFFERING.CREATE';
    const EVENT_VPC_OFFERING_UPDATE = 'VPC.OFFERING.UPDATE';
    const EVENT_VPC_OFFERING_DELETE = 'VPC.OFFERING.DELETE';

    // Private gateway
    const EVENT_PRIVATE_GATEWAY_CREATE = 'PRIVATE.GATEWAY.CREATE';
    const EVENT_PRIVATE_GATEWAY_DELETE = 'PRIVATE.GATEWAY.DELETE';

    // Static routes
    const EVENT_STATIC_ROUTE_CREATE = 'STATIC.ROUTE.CREATE';
    const EVENT_STATIC_ROUTE_DELETE = 'STATIC.ROUTE.DELETE';

    // tag related events
    const EVENT_TAGS_CREATE = 'CREATE_TAGS';
    const EVENT_TAGS_DELETE = 'DELETE_TAGS';

    // meta data related events
    const EVENT_RESOURCE_DETAILS_CREATE = 'CREATE_RESOURCE_DETAILS';
    const EVENT_RESOURCE_DETAILS_DELETE = 'DELETE_RESOURCE_DETAILS';

    // vm snapshot events
    const EVENT_VM_SNAPSHOT_CREATE = 'VMSNAPSHOT.CREATE';
    const EVENT_VM_SNAPSHOT_DELETE = 'VMSNAPSHOT.DELETE';
    const EVENT_VM_SNAPSHOT_REVERT = 'VMSNAPSHOT.REVERTTO';

    // external network device events
    const EVENT_EXTERNAL_NVP_CONTROLLER_ADD = 'PHYSICAL.NVPCONTROLLER.ADD';
    const EVENT_EXTERNAL_NVP_CONTROLLER_DELETE = 'PHYSICAL.NVPCONTROLLER.DELETE';
    const EVENT_EXTERNAL_NVP_CONTROLLER_CONFIGURE = 'PHYSICAL.NVPCONTROLLER.CONFIGURE';
    const EVENT_EXTERNAL_OVS_CONTROLLER_ADD = 'PHYSICAL.OVSCONTROLLER.ADD';
    const EVENT_EXTERNAL_OVS_CONTROLLER_DELETE = 'PHYSICAL.OVSCONTROLLER.DELETE';

    // external network mapping events
    const EVENT_EXTERNAL_VSP_VSD_ADD = 'PHYSICAL.NUAGE.VSD.ADD';
    const EVENT_EXTERNAL_VSP_VSD_UPDATE = 'PHYSICAL.NUAGE.VSD.UPDATE';
    const EVENT_EXTERNAL_VSP_VSD_DELETE = 'PHYSICAL.NUAGE.VSD.DELETE';
    // AutoScale
    const EVENT_COUNTER_CREATE = 'COUNTER.CREATE';
    const EVENT_COUNTER_DELETE = 'COUNTER.DELETE';
    const EVENT_CONDITION_CREATE = 'CONDITION.CREATE';
    const EVENT_CONDITION_DELETE = 'CONDITION.DELETE';
    const EVENT_AUTOSCALEPOLICY_CREATE = 'AUTOSCALEPOLICY.CREATE';
    const EVENT_AUTOSCALEPOLICY_UPDATE = 'AUTOSCALEPOLICY.UPDATE';
    const EVENT_AUTOSCALEPOLICY_DELETE = 'AUTOSCALEPOLICY.DELETE';
    const EVENT_AUTOSCALEVMPROFILE_CREATE = 'AUTOSCALEVMPROFILE.CREATE';
    const EVENT_AUTOSCALEVMPROFILE_DELETE = 'AUTOSCALEVMPROFILE.DELETE';
    const EVENT_AUTOSCALEVMPROFILE_UPDATE = 'AUTOSCALEVMPROFILE.UPDATE';
    const EVENT_AUTOSCALEVMGROUP_CREATE = 'AUTOSCALEVMGROUP.CREATE';
    const EVENT_AUTOSCALEVMGROUP_DELETE = 'AUTOSCALEVMGROUP.DELETE';
    const EVENT_AUTOSCALEVMGROUP_UPDATE = 'AUTOSCALEVMGROUP.UPDATE';
    const EVENT_AUTOSCALEVMGROUP_ENABLE = 'AUTOSCALEVMGROUP.ENABLE';
    const EVENT_AUTOSCALEVMGROUP_DISABLE = 'AUTOSCALEVMGROUP.DISABLE';

    const EVENT_BAREMETAL_DHCP_SERVER_ADD = 'PHYSICAL.DHCP.ADD';
    const EVENT_BAREMETAL_DHCP_SERVER_DELETE = 'PHYSICAL.DHCP.DELETE';
    const EVENT_BAREMETAL_PXE_SERVER_ADD = 'PHYSICAL.PXE.ADD';
    const EVENT_BAREMETAL_PXE_SERVER_DELETE = 'PHYSICAL.PXE.DELETE';
    const EVENT_BAREMETAL_RCT_ADD = 'BAREMETAL.RCT.ADD';
    const EVENT_BAREMETAL_RCT_DELETE = 'BAREMETAL.RCT.DELETE';
    const EVENT_BAREMETAL_PROVISION_DONE = 'BAREMETAL.PROVISION.DONE';

    const EVENT_AFFINITY_GROUP_CREATE = 'AG.CREATE';
    const EVENT_AFFINITY_GROUP_DELETE = 'AG.DELETE';
    const EVENT_AFFINITY_GROUP_ASSIGN = 'AG.ASSIGN';
    const EVENT_AFFINITY_GROUP_REMOVE = 'AG.REMOVE';
    const EVENT_VM_AFFINITY_GROUP_UPDATE = 'VM.AG.UPDATE';

    const EVENT_INTERNAL_LB_VM_START = 'INTERNALLBVM.START';
    const EVENT_INTERNAL_LB_VM_STOP = 'INTERNALLBVM.STOP';

    const EVENT_HOST_RESERVATION_RELEASE = 'HOST.RESERVATION.RELEASE';
    // Dedicated guest vlan range
    const EVENT_GUEST_VLAN_RANGE_DEDICATE = 'GUESTVLANRANGE.DEDICATE';
    const EVENT_DEDICATED_GUEST_VLAN_RANGE_RELEASE = 'GUESTVLANRANGE.RELEASE';

    const EVENT_PORTABLE_IP_RANGE_CREATE = 'PORTABLE.IP.RANGE.CREATE';
    const EVENT_PORTABLE_IP_RANGE_DELETE = 'PORTABLE.IP.RANGE.DELETE';
    const EVENT_PORTABLE_IP_TRANSFER = 'PORTABLE.IP.TRANSFER';

    // Dedicated Resources
    const EVENT_DEDICATE_RESOURCE = 'DEDICATE.RESOURCE';
    const EVENT_DEDICATE_RESOURCE_RELEASE = 'DEDICATE.RESOURCE.RELEASE';

    const EVENT_CLEANUP_VM_RESERVATION = 'VM.RESERVATION.CLEANUP';

    const EVENT_UCS_ASSOCIATED_PROFILE = 'UCS.ASSOCIATEPROFILE';

    // IAM events
    const EVENT_IAM_POLICY_CREATE = 'IAMPOLICY.CREATE';
    const EVENT_IAM_POLICY_DELETE = 'IAMPOLICY.DELETE';
    const EVENT_IAM_POLICY_GRANT = 'IAMPOLICY.GRANT';
    const EVENT_IAM_POLICY_REVOKE = 'IAMPOLICY.REVOKE';

    const EVENT_IAM_GROUP_UPDATE = 'IAMGROUP.UPDATE';
    const EVENT_IAM_GROUP_CREATE = 'IAMGROUP.CREATE';
    const EVENT_IAM_GROUP_DELETE = 'IAMGROUP.DELETE';
    const EVENT_IAM_GROUP_GRANT = 'IAMGROUP.GRANT';
    const EVENT_IAM_GROUP_REVOKE = 'IAMGROUP.REVOKE';
    const EVENT_IAM_ACCOUNT_POLICY_UPDATE = 'IAMACCOUNTPOLICY.UPDATE';

    // Object store migration
    const EVENT_MIGRATE_PREPARE_SECONDARY_STORAGE = 'MIGRATE.PREPARE.SS';

    //Alert generation
    const ALERT_GENERATE = 'ALERT.GENERATE';

    // OpenDaylight
    const EVENT_EXTERNAL_OPENDAYLIGHT_ADD_CONTROLLER = 'PHYSICAL.ODLCONTROLLER.ADD';
    const EVENT_EXTERNAL_OPENDAYLIGHT_DELETE_CONTROLLER = 'PHYSICAL.ODLCONTROLLER.DELETE';
    const EVENT_EXTERNAL_OPENDAYLIGHT_CONFIGURE_CONTROLLER = 'PHYSICAL.ODLCONTROLLER.CONFIGURE';

    //Guest OS related events
    const EVENT_GUEST_OS_ADD = 'GUEST.OS.ADD';
    const EVENT_GUEST_OS_REMOVE = 'GUEST.OS.REMOVE';
    const EVENT_GUEST_OS_UPDATE = 'GUEST.OS.UPDATE';
    const EVENT_GUEST_OS_MAPPING_ADD = 'GUEST.OS.MAPPING.ADD';
    const EVENT_GUEST_OS_MAPPING_REMOVE = 'GUEST.OS.MAPPING.REMOVE';
    const EVENT_GUEST_OS_MAPPING_UPDATE = 'GUEST.OS.MAPPING.UPDATE';

    const EVENT_NIC_SECONDARY_IP_ASSIGN = 'NIC.SECONDARY.IP.ASSIGN';
    const EVENT_NIC_SECONDARY_IP_UNASSIGN = 'NIC.SECONDARY.IP.UNASSIGN';
    const EVENT_NIC_SECONDARY_IP_CONFIGURE = 'NIC.SECONDARY.IP.CONFIGURE';
    const EVENT_NETWORK_EXTERNAL_DHCP_VM_IPFETCH = 'EXTERNAL.DHCP.VM.IP.FETCH';

    //Usage related events
    const EVENT_USAGE_REMOVE_USAGE_RECORDS = 'USAGE.REMOVE.USAGE.RECORDS';
}
