{#
    This file is part of the CloudStack Client Generator.

    (c) Quentin Plepl√© <quentin.pleple@gmail.com>
    (c) Aaron Hurt <ahurt@anbcs.com>
    (c) Nathan Johnson <nathan@nathanjohnson.info>
    (c) Daniel Carbone <daniel.p.carbone@gmail.com>
    (c) Bogdan Gabor <bgabor@ena.com>

    For the full copyright and license information, please view the LICENSE
    file that was distributed with this source code.
#}
<?php

{{ namespace_stmt() }}

{{ file_header(capabilities) }}

/**
 * CloudStackCachedResponse
 * @package {{ namespace_path('', true) }}
 */
final class CloudStackCachedResponse implements \JsonSerializable
{
    private const FIELD_GENERATION_ID      = 'generationID';
    private const FIELD_RESPONSE           = 'response';
    private const FIELD_RESPONSE_CLASSNAME = 'responseClassname';

    /** @var int */
    private $generationID = CloudStackGenerationMeta::ID;
    /** @var {{ namespace_path('CloudStackResponse\\CloudStackResponseInterface', true) }} */
    private $response;
    /** @var string */
    private $responseClassname;

    /**
     * NOTE: This must ONLY be utilized by the generated client, and it MUST NOT attempt to create a cache from an "empty" response.
     *
     * CloudStackCachedResponse constructor
     * @param {{ namespace_path('CloudStackResponse\\CloudStackResponseInterface', true) }}|{{ namespace_path('CloudStackResponse\\CloudStackResponseInterface', true) }}[] $response The cached response itself
     */
    public function __construct($response)
    {
        if (is_array($response)) {
            $this->responseClassname = get_class($response[0]);
        } else {
            $this->responseClassname = get_class($response);
        }
        $this->response = $response;
    }

    /**
     * Must return the ID of the generated client used to create this cache
     * @return int
     */
    public function getGenerationID(): int
    {
        return $this->generationID;
    }

    /**
     * Must return the cached response
     * @return {{ namespace_path('CloudStackResponse\\CloudStackResponseInterface', true) }}|{{ namespace_path('CloudStackResponse\\CloudStackResponseInterface', true) }}[]
     */
    public function getResponse()
    {
        return $this->response;
    }

    /**
     * @return string
     */
    public function getResponseClassname(): string
    {
        return $this->responseClassname;
    }

    /**
     * @return array
     */
    public function jsonSerialize()
    {
        return [
            self::FIELD_GENERATION_ID      => $this->getGenerationID(),
            self::FIELD_RESPONSE           => $this->getResponse(),
            self::FIELD_RESPONSE_CLASSNAME => $this->getResponseClassname(),
        ];
    }

    /**
     * TODO: more descriptive errors
     * @param mixed $response
     * @return \InvalidArgumentException
     */
    private static function createInvalidArgumentException($response): \InvalidArgumentException
    {
        return new \InvalidArgumentException(sprintf('$response must be a single, or an array of at least one, instance of CloudStackResponseInterface object(s). %s seen', gettype($response)));
    }
}