{#
    This file is part of the CloudStack Client Generator.

    (c) Quentin Pleplé <quentin.pleple@gmail.com>
    (c) Aaron Hurt <ahurt@anbcs.com>
    (c) Nathan Johnson <nathan@nathanjohnson.info>
    (c) Daniel Carbone <daniel.p.carbone@gmail.com>
    (c) Bogdan Gabor <bgabor@ena.com>

    For the full copyright and license information, please view the LICENSE
    file that was distributed with this source code.
#}
<?php{{ namespace_stmt() }}

/*
 * This file was autogenerated as part of the CloudStack PHP Client.
 *
 * Date Generated: {{ now('Y-m-d') }}
 * API Version: {{ capabilities.capability.cloudstackversion }}
 *
 * (c) Quentin Pleplé {{ '<quentin.pleple@gmail.com>'|raw }}
 * (c) Aaron Hurt {{ '<ahurt@anbcs.com>'|raw }}
 * (c) Nathan Johnson {{ '<nathan@nathanjohnson.org>'|raw }}
 * (c) Daniel Carbone {{ '<daniel.p.carbone@gmail.com>'|raw }}
 * (c) Bogdan Gabor {{ '<bgabor@ena.com>'|raw }}
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * CloudStackAPIException
 *
 * This exception should only be thrown when CloudStack itself returns an error
 */
class CloudStackAPIException extends \RuntimeException {
    /** @var string [] */
    private $uuidList = [];
    /** @var int */
    private $errorCode = 0;
    /** @var int */
    private $csErrorCode = 0;
    /** @var string */
    private $errorText = 'Unknown Error';

    /**
     * CloudStackAPIException Constructor
     * @param array $response JSON-decoded error response from CloudStack
     * @param \Throwable $previous Previous exception, if any
     */
    public function __construct(array $response, \Throwable $previous = null) {
        if (isset($response['uuidlist']) && is_array($response['uuidlist'])) {
            $this->uuidList = $response['uuidlist'];
        }

        if (isset($response['errorcode'])) {
            $this->errorCode = (int)$response['errorcode'];
        }

        if (isset($response['cserrorcode'])) {
            $this->csErrorCode = (int)$response['cserrorcode'];
        }

        if (isset($response['errortext'])) {
            $this->errorText = (string)$response['errortext'];
        }

        $msg = sprintf('Code: %d; CloudStack Code: %d; Message: %s', $this->errorCode, $this->csErrorCode, $this->errorText);

        parent::__construct($msg, $this->errorCode, $previous);
    }

    /**
     * @return string[]
     */
    public function getUUIDList(): array {
        return $this->uuidList;
    }

    /**
     * @return int
     */
    public function getErrorCode(): int {
        return $this->errorCode;
    }

    /**
     * @return int
     */
    public function getCSErrorCode(): int {
        return $this->csErrorCode;
    }

    /**
     * @return string
     */
    public function getErrorText(): string {
        return $this->errorText;
    }
}
