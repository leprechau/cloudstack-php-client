{#
    This file is part of the CloudStack Client Generator.

    (c) Quentin Plepl√© <quentin.pleple@gmail.com>
    (c) Aaron Hurt <ahurt@anbcs.com>
    (c) Nathan Johnson <nathan@nathanjohnson.info>
    (c) Daniel Carbone <daniel.p.carbone@gmail.com>
    (c) Bogdan Gabor <bgabor@ena.com>

    For the full copyright and license information, please view the LICENSE
    file that was distributed with this source code.
#}
<?php

{{ namespace_stmt('CloudStackRequest') }};

use {{ namespace_path('CloudStackRequestException') }};

{{ file_header(capabilities) }}

/**
{% if env.swagger.version == 2 %}
 * @SWG\Definition(
 *     definition="CloudStackAccessVmConsoleProxyResponse",
 *     type="object",
 *     description="Request url to access system console for a given VM",
 *     required={"vm"},
 *     @SWG\Property(
 *          property="vm",
 *          type="string",
 *          description="ID of Virtual Machine you wish to access the console for"
 *     )
 * )
{% else %}
 * @OA\Schema(
 *     schema="CloudStackAccessVmConsoleProxyRequest",
 *     type="object",
 *     description="Request url to access system console for a given VM",
 *     required={"vm"},
 *     @OA\Property(
 *          property="vm",
 *          type="string",
 *          description="ID of Virtual Machine you wish to access the console for"
 *     )
 * )
{% endif %}
 */

/**
 * Class AccessVmConsoleProxyRequest
 * @package {{ namespace_path('CloudStackRequest', true) }}
 */
class AccessVmConsoleProxyRequest implements CloudStackRequestInterface, CloudStackConsoleCommandRequest
{
    /**
     * Virtual Machine ID
     * @var string
     */
    private $vm;

    /**
     * AccessVmConsoleProxyRequest Constructor
     * @param string $vm
     */
    public function __construct($vm)
    {
        $this->setVm($vm);
    }

    /**
     * Virtual Machine ID
     * @return string
     */
    public function getVm(): ?string
    {
        return $this->vm ?? null;
    }

    /**
     * Virtual Machine ID
     * @param string $vm
     * @return $this
     */
    public function setVm($vm)
    {
        $this->vm = $vm;
        return $this;
    }

    /**
     * @return string
     */
    public function getCloudStackCommandParameter(): string
    {
        return 'cmd';
    }

    /**
     * @return string
     */
    public function getCloudStackCommandName(): string
    {
        return 'access';
    }

    /**
     * @return string
     */
    public function getCloudStackResponseModel(): string
    {
        return '{{ namespace_path('CloudStackResponse\AccessVmConsoleProxyResponse', true) }}';
    }

    /**
     * @return bool
     */
    public function isRequestValid(): bool
    {
        return isset($this->vm);
    }

    /**
     * @throws {{ namespace_path('CloudStackRequestException', true) }}
     */
    public function validateRequest(): void
    {
        if (!isset($this->vm)) {
            throw new CloudStackRequestException($this, ['Required parameter "vm" is not set']);
        }
    }

    /**
     * @return array
     */
    public function toUrlParams(): array
    {
        $a = [];
        if (isset($this->vm)) {
            $a['vm'] = $this->vm;
        }
        return $a;
    }

    /**
     * @return array
     */
    public function jsonSerialize()
    {
        $a = [];
        if (isset($this->vm)) {
            $a['vm'] = $this->getVm();
        }
        return $a;
    }
}
